@model ToDoApp.Models.EmployeeVM

@{
    ViewData["Title"] = "Edit";
    var paginatedToDos = Model.ToDos as ToDoApp.Data.PaginatedList<ToDoApp.Models.ToDo>;
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        <strong>Error ! </strong>   @TempData["ErrorMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span>&times;</span>
        </button>
    </div>
}

<div class="row">
    <div class="col-md-8 mx-auto rounded border p-3">
        <h2 class="text-center mb-5">Edit employee</h2>
        <form asp-action="Edit" enctype="multipart/form-data">
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">Last name</label>
                <div class="col-sm-8">
                    <input class="form-control" asp-for="LastName">
                    <span asp-validation-for="LastName" class="text-danger" />
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">First name</label>
                <div class="col-sm-8">
                    <input class="form-control" asp-for="FirstName">
                    <span asp-validation-for="FirstName" class="text-danger" />
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">Middle name</label>
                <div class="col-sm-8">
                    <input class="form-control" asp-for="MiddleName">
                    <span asp-validation-for="MiddleName" class="text-danger" />
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">Birthday</label>
                <div class="col-sm-8">
                    <input type="date" class="form-control" asp-for="Birthday">
                    <span asp-validation-for="Birthday" class="text-danger" />
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">Speciality</label>
                <div class="col-sm-8">
                    <input class="form-control" asp-for="Speciality">
                    <span asp-validation-for="Speciality" class="text-danger" />
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">Employment date</label>
                <div class="col-sm-8">
                    <input type="date" class="form-control" asp-for="EmploymentDate">
                    <span asp-validation-for="EmploymentDate" class="text-danger" />
                </div>
            </div>
            <div class="row mb-3">
                <div class="offset-sm-4 col-sm-8">
                    <img src="/photos/@ViewData["EmployeePhotoPath"]" style="width:50px;height:50px;border-radius:50%" />
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">Employee photo</label>
                <div class="col-sm-8">
                    <input class="form-control" asp-for="EmployeePhoto">
                    <span asp-validation-for="EmployeePhoto" class="text-danger" />
                </div>
            </div>

            <div class="row">
                <div class="offset-sm-4 col-sm-4 d-grid">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
                <div class="col-sm-4 d-grid">
                    <a asp-action="Index" class="btn btn-primary">Back to employees</a>
                </div>
            </div>
        </form>

        <hr />

        @if (paginatedToDos != null && paginatedToDos.HasPreviousPage && paginatedToDos.HasNextPage)
        {
            var prevDisabled = !paginatedToDos.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !paginatedToDos.HasNextPage ? "disabled" : "";

            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(paginatedToDos.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-primary @prevDisabled">
                Previous
            </a>
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(paginatedToDos.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-primary @nextDisabled">
                Next
            </a>
        }
        
        <table class="table table-bordered table-hover table-striped">
            <tbody>
                <tr>
                    <th>
                        @Html.ActionLink("Id", "Index", new { sortOrder = @ViewData["IdSortParm"], searchString = @ViewData["CurrentFilter"] })
                    </th>
                    <th>
                        @Html.ActionLink("Name", "Index", new { sortOrder = @ViewData["NameSortParm"], searchString = @ViewData["CurrentFilter"] })
                    </th>
                    <th>
                        @Html.ActionLink("Description", "Index", new { sortOrder = @ViewData["DescriptionSortParm"], searchString = @ViewData["CurrentFilter"] })
                    </th>
                    <th>
                        Status
                    </th>
                    <th>
                        @Html.ActionLink("Employee Id", "Index", new { sortOrder = @ViewData["EmployeeIdSortParm"], searchString = @ViewData["CurrentFilter"] })
                    </th>
                    <th>
                        <a asp-action="Create" class="btn btn-primary">+ New todo</a>
                    </th>
                </tr>

            @if (Model.ToDos != null && Model.ToDos.Any())
            {
                @foreach (var item in Model.ToDos)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsClosed)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmployeeId)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-success">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                            <a asp-action="Duplicate" asp-route-id="@item.Id" class="btn btn-primary">Duplicate</a>
                            @if (item.IsClosed)
                            {
                                <a asp-action="Open" asp-route-id="@item.Id" class="btn btn-primary">Open</a>
                            }
                            else
                            {
                                <a asp-action="Close" asp-route-id="@item.Id" class="btn btn-primary">Close</a>
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    No ToDos avaliable for the employee.
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
