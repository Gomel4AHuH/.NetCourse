@using ToDoApp.Data
@model PaginatedList<ToDoApp.Models.ToDo>

@{
    ViewData["Title"] = "Index";
    var employeeId = ViewData["Id"];
}

<h1>ToDos</h1>

@if (TempData["InfoMessage"] != null)
{
    <div class="alert alert-info">
        <strong>Information ! </strong>   @TempData["InfoMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span>&times;</span>
        </button>
    </div>
}
else if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        <strong>Success ! </strong>   @TempData["SuccessMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span>&times;</span>
        </button>
    </div>
}
else if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        <strong>Error ! </strong>   @TempData["ErrorMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span>&times;</span>
        </button>
    </div>
}

@using (Html.BeginForm())
{
    <p>
        Find by name: @Html.TextBox("SearchString")
        <input type="submit" class="btn btn-primary" value="Search" />
        <a asp-action="Index" class="btn btn-primary">Cancel search</a>
    </p>
}

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var firstDisabled = (Model.PageIndex == 1) ? "disabled" : "";
    var lastDisabled = (Model.PageIndex == Model.TotalPages) ? "disabled" : "";

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="1"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-primary @firstDisabled">
        First
    </a>

    <a asp-action="Index"
        asp-route-sortOrder="@ViewData["CurrentSort"]"
        asp-route-pageNumber="@(Model.PageIndex - 1)"
        asp-route-currentFilter="@ViewData["CurrentFilter"]"
        class="btn btn-primary @prevDisabled">
        Previous
    </a>

    <a asp-action="Index"
        asp-route-sortOrder="@ViewData["CurrentSort"]"
        asp-route-pageNumber="@(Model.PageIndex + 1)"
        asp-route-currentFilter="@ViewData["CurrentFilter"]"
        class="btn btn-primary @nextDisabled">
        Next
    </a>

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.TotalPages)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-primary @lastDisabled">
        Last
    </a>
}

<hr />

<table class="table table-bordered table-hover table-striped">
    <tbody>
        <tr>
            <th>
                @Html.ActionLink("Id", "Index", new { sortOrder = @ViewData["IdSortParm"], searchString = @ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("Name", "Index", new { sortOrder = @ViewData["NameSortParm"], searchString = @ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("Description", "Index", new { sortOrder = @ViewData["DescriptionSortParm"], searchString = @ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("Status", "Index", new { sortOrder = @ViewData["StatusSortParm"], searchString = @ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("Employee Id", "Index", new { sortOrder = @ViewData["EmployeeIdSortParm"], searchString = @ViewData["CurrentFilter"] })
            </th>
            @if (employeeId.ToString() != "0")
            {
                <th>
                    <a asp-action="Create" asp-route-employeeId="@employeeId" class="btn btn-primary">+ New todo</a>
                    <a asp-action="Index" asp-controller="Employee" class="btn btn-primary">Back to employees</a>
                </th>
            }
        </tr>

        @if (Model.Count != 0)
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsClosed)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeId)
                    </td>
                    @if (employeeId.ToString() != "0")
                    {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-success">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                            <a asp-action="Duplicate" asp-route-id="@item.Id" class="btn btn-primary">Duplicate</a>
                            @if (item.IsClosed)
                            {
                                <a asp-action="StatusChange" asp-route-id="@item.Id" asp-route-status="@item.IsClosed" class="btn btn-primary">Open</a>
                            }
                            else
                            {
                                <a asp-action="StatusChange" asp-route-id="@item.Id" asp-route-status="@item.IsClosed" class="btn btn-primary">Close</a>
                            }
                            <!--
                                <a asp-action="StatusChange" asp-route-id="@item.Id" asp-route-status="@item.IsClosed" class="btn btn-primary">@item.IsClosed ? Open : Close</a>
                            -->
                        </td>
                    }
                </tr>
            }
        }
        else
        {
            <tr>
                No todos avaliable for now.
            </tr>
        }
    </tbody>
</table>