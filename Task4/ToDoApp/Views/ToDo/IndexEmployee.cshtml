@using ToDoApp.Data

@model PaginatedList<ToDoApp.Models.ToDo>

@{
    ViewData["Title"] = "IndexEmployee";
    var employee = (Employee)ViewData["Employee"];
}

<h1>ToDos for employee: </h1>
<h3>@employee.LastName @employee.FirstName @employee.MiddleName @employee.Birthday</h3>

<partial name="_AlertMessages" />

<partial name="_SearchForm" />

<partial name="_PaginationButtons" />

<hr />

<table class="table table-bordered table-hover table-striped">
    <tbody>
        <tr>
            <th>
                @Html.ActionLink("Name", "IndexEmployee", new { sortOrder = @ViewData["NameSortParm"], searchString = @ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("Description", "IndexEmployee", new { sortOrder = @ViewData["DescriptionSortParm"], searchString = @ViewData["CurrentFilter"] })
            </th>
            <th>
                @Html.ActionLink("Status", "IndexEmployee", new { sortOrder = @ViewData["StatusSortParm"], searchString = @ViewData["CurrentFilter"] })
            </th>
            <th>
                <a asp-action="Create" asp-route-employeeId="@employee.Id" class="btn btn-primary">+ New todo</a>
                <a asp-action="Index" asp-controller="Employee" class="btn btn-info">Back to employees</a>
            </th>                
        </tr>

        @if (Model.Count != 0)
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsClosed)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                        <a asp-action="Duplicate" asp-route-id="@item.Id" class="btn btn-success">Duplicate</a>
                        @if (item.IsClosed)
                        {
                            <a asp-action="StatusChange" asp-route-id="@item.Id" asp-route-status="@item.IsClosed" class="btn btn-success">Open</a>
                        }
                        else
                        {
                            <a asp-action="StatusChange" asp-route-id="@item.Id" asp-route-status="@item.IsClosed" class="btn btn-success">Close</a>
                        }
                        <a asp-action="Reassign" asp-route-id="@item.Id" class="btn btn-success">Reassign</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                No todos avaliable for now.
            </tr>
        }
    </tbody>
</table>